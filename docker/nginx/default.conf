# nginx.conf
# This Nginx configuration is tailored for a Symfony application,
# ensuring security, performance, and adherence to the front-controller pattern.

server {
    # Listen on port 80 for HTTP requests
    listen 80;
    # Define the server name(s) this block responds to
    server_name localhost;
    # Set the document root to the Symfony public directory
    root /var/www/html/public;

    # Configure access and error logs
    # Using distinct log files for clarity, similar to your alternative config
    access_log /var/log/nginx/project_access.log;
    error_log /var/log/nginx/project_error.log warn; # Log warnings and above

    # First, try to serve the request as a static file.
    # If not found, internally rewrite the URI to index.php, preserving query arguments.
    # This ensures all non-static requests are handled by Symfony's front controller.
    location / {
        try_files $uri /index.php$is_args$args;
    }

    # Process requests specifically for index.php or paths starting with index.php/
    # This is the main FastCGI pass for the Symfony application.
    location ~ ^/index\.php(/|$) {
        # Pass the request to the PHP-FPM service, named 'app' in docker-compose.yml, on port 9000.
        fastcgi_pass app:9000;

        # Split the URI into SCRIPT_FILENAME and PATH_INFO.
        # PATH_INFO is crucial for Symfony's routing, allowing URLs like /index.php/api/status.
        fastcgi_split_path_info ^(.+\.php)(/.*)$;

        # Include standard FastCGI parameters.
        # This typically includes parameters like REMOTE_ADDR, REQUEST_METHOD, etc.
        include fastcgi_params;

        # Set SCRIPT_FILENAME to the absolute path of the PHP script to be executed.
        # $realpath_root resolves symbolic links, ensuring correctness in various environments.
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        # Set DOCUMENT_ROOT for the PHP script.
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        # Optimize FastCGI buffering for performance.
        # These values can be adjusted based on your application's needs.
        fastcgi_buffers 16 16k; # Number and size of buffers
        fastcgi_buffer_size 32k; # Size of buffer for the first part of the response

        # Set the FastCGI read timeout. Increase if you have long-running PHP processes.
        fastcgi_read_timeout 300; # 300 seconds (5 minutes)

        # The 'internal' directive prevents direct external access to this location.
        # Requests can only reach this block via internal rewrites (e.g., from try_files).
        internal;
    }

    # Explicitly deny access to any other .php files.
    # This is a critical security measure to prevent direct execution of PHP scripts
    # that are not intended to be accessed as front controllers (e.g., utility scripts).
    location ~ \.php$ {
        return 404; # Return a 404 Not Found error for any other .php requests
    }

    # Deny access to .env files and other sensitive configuration files.
    # These files should never be publicly accessible.
    location ~ /\.env {
        deny all;
    }

    # Deny access to all other dot files (e.g., .htaccess, .git, .vscode files).
    # This prevents accidental exposure of hidden configuration or version control files.
    location ~ /\. {
        deny all;
    }
}
